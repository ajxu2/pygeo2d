Search.setIndex({"docnames": ["circle", "example", "index", "line", "point", "utility"], "filenames": ["circle.rst", "example.rst", "index.rst", "line.rst", "point.rst", "utility.rst"], "titles": ["Circle", "Example", "Welcome to pygeo2d\u2019s documentation!", "Line", "Point", "Utility functions"], "terms": {"class": [0, 2, 3, 4], "A": [0, 1, 2, 3, 4], "two": [0, 3, 4, 5], "dimension": [0, 3, 4], "plane": [0, 3, 4], "__init__": [0, 3, 4], "center": 0, "radiu": 0, "creat": [0, 3, 4], "an": [0, 3], "instanc": [0, 3, 5], "base": [0, 3], "paramet": [0, 3, 4, 5], "point": [0, 1, 2, 3], "properti": [0, 3, 4], "The": [0, 3, 4], "__repr__": [0, 3, 4], "return": [0, 1, 3, 4, 5], "string": [0, 3, 4], "represent": [0, 3, 4], "thi": [0, 3, 4], "0": [0, 1, 2, 3, 4], "5": [0, 2, 3, 4], "__str__": [0, 3, 4], "form": [0, 3], "equat": [0, 3], "print": [0, 1, 2, 3, 4], "x": [0, 4], "2": [0, 2, 3, 4], "y": [0, 4], "__contains__": [0, 3], "pt": [0, 3], "whether": [0, 3, 4], "i": [0, 1, 2, 3, 4], "3": [0, 1, 2, 3, 4], "4": [0, 2, 3, 4], "true": [0, 1, 3, 4], "fals": [0, 3], "test": [0, 1, 2, 3, 4], "intersect": [0, 1, 2, 3, 5], "l": [0, 2, 3], "list": 0, "": [0, 1], "between": [0, 2, 5], "line": [0, 1, 2], "10": [0, 1], "1": [0, 1, 2, 3, 4], "9": 0, "6": [0, 4], "let": 1, "ceva": 1, "theorem": 1, "well": 1, "known": 1, "result": [1, 4], "geometri": 1, "correct": 1, "first": [1, 5], "we": 1, "can": 1, "make": 1, "function": [1, 2, 4], "doe": 1, "one": 1, "us": [1, 3, 4], "random": 1, "from": [1, 2, 4], "pygeo2d": 1, "import": [1, 2], "uniform": 1, "math": [1, 4], "isclos": [1, 4], "def": 1, "test_ceva": 1, "select": 1, "our": 1, "triangl": [1, 2], "b": [1, 2, 3, 5], "c": [1, 2, 3], "next": 1, "which": 1, "three": 1, "concur": 1, "p": 1, "draw": 1, "cevian": 1, "side": 1, "d": [1, 2], "e": 1, "f": 1, "check": 1, "If": 1, "follow": 1, "should": 1, "alwai": 1, "dist": [1, 2, 4, 5], "now": 1, "just": 1, "run": 1, "some": 1, "larg": 1, "number": 1, "time": 1, "num_correct": 1, "num_test": 1, "10000": 1, "rang": 1, "out": 1, "match": 1, "expect": 1, "outcom": 1, "As": 1, "you": 1, "see": 1, "seem": 1, "altern": 1, "look": 1, "perspect": 1, "geomet": 1, "have": [1, 5], "told": 1, "u": 1, "unlik": 1, "flaw": 1, "circl": 2, "util": 2, "dot": [2, 4, 5], "cross": [2, 4, 5], "exampl": 2, "name": 2, "suggest": 2, "librari": 2, "imension": 2, "geo": 2, "metri": 2, "py": 2, "thon": 2, "featur": 2, "includ": 2, "realli": 2, "vector": [2, 4], "implement": 2, "addit": [2, 4], "subtract": [2, 4], "distanc": [2, 4, 5], "basic": 2, "construct": 2, "midpoint": 2, "perpendicular": 2, "bisector": 2, "etc": 2, "todo": 2, "circumcent": 2, "circumcircl": 2, "incent": 2, "incircl": 2, "usag": 2, "kitchen": 2, "sink": 2, "2x": 2, "2y": 2, "easi": 2, "pip": 2, "http": 2, "pypi": 2, "org": 2, "simpl": 2, "extend": 3, "infin": 3, "both": [3, 4], "direct": 3, "p1": 3, "p2": 3, "1x": 3, "1y": 3, "anoth": [3, 4], "valu": 3, "when": 3, "written": 3, "ax": 3, "mostli": 3, "intend": 3, "intern": [3, 4], "rais": 3, "zerodivisionerror": 3, "ar": [3, 4, 5], "parallel": 3, "concurr": 3, "new": 4, "object": [4, 5], "cartesian": 4, "coordin": 4, "__add__": 4, "other": 4, "add": 4, "In": 4, "word": 4, "individu": 4, "ad": 4, "__sub__": 4, "__mul__": 4, "scale": 4, "up": 4, "origin": 4, "certain": 4, "factor": 4, "each": 4, "multipli": 4, "multipl": 4, "__rmul__": 4, "equival": [4, 5], "revers": 4, "order": 4, "__truediv__": 4, "down": 4, "divid": 4, "divis": 4, "__neg__": 4, "rotat": 4, "180": 4, "degre": 4, "about": 4, "negat": 4, "__pos__": 4, "same": 4, "__abs__": 4, "euclidean": [4, 5], "ab": 4, "format": 4, "like": 4, "tupl": 4, "__eq__": 4, "locat": 4, "place": 4, "equal": 4, "self": 4, "7": 4, "take": 4, "comput": 4, "product": [4, 5], "22": 4, "magnitud": [4, 5], "posit": 4, "indic": 4, "upward": 4, "while": 4, "neg": 4, "opposit": 4, "26": 4, "These": 5, "would": 5, "normal": 5, "call": 5, "via": 5, "method": 5, "thei": 5, "been": 5, "convert": 5, "preserv": 5, "eleg": 5, "symmetri": 5, "either": 5, "second": 5}, "objects": {"": [[0, 0, 1, "", "Circle"], [3, 0, 1, "", "Line"], [4, 0, 1, "", "Point"], [5, 3, 1, "", "cross"], [5, 3, 1, "", "dist"], [5, 3, 1, "", "dot"], [5, 3, 1, "", "intersect"]], "Circle": [[0, 1, 1, "", "__contains__"], [0, 1, 1, "", "__init__"], [0, 1, 1, "", "__repr__"], [0, 1, 1, "", "__str__"], [0, 2, 1, "", "center"], [0, 1, 1, "", "intersect"], [0, 2, 1, "", "radius"]], "Line": [[3, 1, 1, "", "__contains__"], [3, 1, 1, "", "__init__"], [3, 1, 1, "", "__repr__"], [3, 1, 1, "", "__str__"], [3, 2, 1, "", "a"], [3, 2, 1, "", "b"], [3, 2, 1, "", "c"], [3, 1, 1, "", "intersect"], [3, 2, 1, "", "p1"], [3, 2, 1, "", "p2"]], "Point": [[4, 1, 1, "", "__abs__"], [4, 1, 1, "", "__add__"], [4, 1, 1, "", "__eq__"], [4, 1, 1, "", "__init__"], [4, 1, 1, "", "__mul__"], [4, 1, 1, "", "__neg__"], [4, 1, 1, "", "__pos__"], [4, 1, 1, "", "__repr__"], [4, 1, 1, "", "__rmul__"], [4, 1, 1, "", "__str__"], [4, 1, 1, "", "__sub__"], [4, 1, 1, "", "__truediv__"], [4, 1, 1, "", "cross"], [4, 1, 1, "", "dist"], [4, 1, 1, "", "dot"], [4, 2, 1, "", "x"], [4, 2, 1, "", "y"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:property", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "property", "Python property"], "3": ["py", "function", "Python function"]}, "titleterms": {"circl": 0, "exampl": 1, "welcom": 2, "pygeo2d": 2, "": 2, "document": 2, "content": 2, "instal": 2, "line": 3, "point": 4, "util": 5, "function": 5}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Circle": [[0, "circle"]], "Example": [[1, "example"]], "Welcome to pygeo2d\u2019s documentation!": [[2, "welcome-to-pygeo2d-s-documentation"]], "Contents:": [[2, null]], "Installation": [[2, "installation"]], "Line": [[3, "line"]], "Point": [[4, "point"]], "Utility functions": [[5, "utility-functions"]]}, "indexentries": {"circle (built-in class)": [[0, "Circle"]], "__contains__() (circle method)": [[0, "Circle.__contains__"]], "__init__() (circle method)": [[0, "Circle.__init__"]], "__repr__() (circle method)": [[0, "Circle.__repr__"]], "__str__() (circle method)": [[0, "Circle.__str__"]], "center (circle property)": [[0, "Circle.center"]], "intersect() (circle method)": [[0, "Circle.intersect"]], "radius (circle property)": [[0, "Circle.radius"]], "line (built-in class)": [[3, "Line"]], "__contains__() (line method)": [[3, "Line.__contains__"]], "__init__() (line method)": [[3, "Line.__init__"]], "__repr__() (line method)": [[3, "Line.__repr__"]], "__str__() (line method)": [[3, "Line.__str__"]], "a (line property)": [[3, "Line.a"]], "b (line property)": [[3, "Line.b"]], "c (line property)": [[3, "Line.c"]], "intersect() (line method)": [[3, "Line.intersect"]], "p1 (line property)": [[3, "Line.p1"]], "p2 (line property)": [[3, "Line.p2"]], "point (built-in class)": [[4, "Point"]], "__abs__() (point method)": [[4, "Point.__abs__"]], "__add__() (point method)": [[4, "Point.__add__"]], "__eq__() (point method)": [[4, "Point.__eq__"]], "__init__() (point method)": [[4, "Point.__init__"]], "__mul__() (point method)": [[4, "Point.__mul__"]], "__neg__() (point method)": [[4, "Point.__neg__"]], "__pos__() (point method)": [[4, "Point.__pos__"]], "__repr__() (point method)": [[4, "Point.__repr__"]], "__rmul__() (point method)": [[4, "Point.__rmul__"]], "__str__() (point method)": [[4, "Point.__str__"]], "__sub__() (point method)": [[4, "Point.__sub__"]], "__truediv__() (point method)": [[4, "Point.__truediv__"]], "cross() (point method)": [[4, "Point.cross"]], "dist() (point method)": [[4, "Point.dist"]], "dot() (point method)": [[4, "Point.dot"]], "x (point property)": [[4, "Point.x"]], "y (point property)": [[4, "Point.y"]], "built-in function": [[5, "cross"], [5, "dist"], [5, "dot"], [5, "intersect"]], "cross()": [[5, "cross"]], "dist()": [[5, "dist"]], "dot()": [[5, "dot"]], "intersect()": [[5, "intersect"]]}})